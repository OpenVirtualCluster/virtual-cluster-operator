name: Automated Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Install dependencies
        run: go mod tidy

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: OpenVirtualCluster/operator
          tags: |
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install semantic-release
        run: npm install -g semantic-release @semantic-release/git @semantic-release/github @semantic-release/changelog

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Determine Release Type
        id: release_type
        run: |
          RELEASE_TYPE=$(npx semantic-release --dry-run | grep 'The next release version is' | awk '{print $6}')
          echo "::set-output name=release_type::$RELEASE_TYPE"

      - name: Create GitHub Release
        if: steps.release_type.outputs.release_type != ''
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.release_type.outputs.release_type }}
          release_name: Release ${{ steps.release_type.outputs.release_type }}
          body: |
            Automated release based on changes detected.
          draft: false
          prerelease: false
          token: ${{ secrets.RELEASER_GITHUB_PAT }}
